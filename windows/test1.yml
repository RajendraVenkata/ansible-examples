---
- name: Playbook for checking HANA Services
  hosts: all,localhost
  gather_facts: false
  tasks:

    - name: Transfer scripts to remote systems
      copy: src=./scripts/{{ item }} dest=/tmp/ mode=775
      register: chkcmd
      with_items:
        - hana_availability_checks.sh
        - sap_instance_list.sh
        - hana_back_check.sh
        - hana_sr_state.sh
        - hana_repl_status.sh
      when: "'localhost' not in inventory_hostname"

    - name: Run hostctrl command
      command: "sh /tmp/sap_instance_list.sh"
      ignore_errors: true
      become: yes
      become_user: sapadm
      register: chkcmd1
      when: "'localhost' not in inventory_hostname"

    - name: Run availability command
      command: "sh /tmp/hana_availability_checks.sh {{item}} {{inventory_hostname}}"
      ignore_errors: true
      become: yes
      become_user: "{{ item.split(':')[0] | lower }}adm"
      register: chkcmd2
      with_items: "{{hostvars[inventory_hostname]['chkcmd1']['stdout'].split(',')}}"
      when: "'localhost' not in inventory_hostname"

    - name: Run backup check command
      command: "sh /tmp/hana_back_check.sh {{item}} {{inventory_hostname}}"
      ignore_errors: true
      become: yes
      become_user: "{{ item.split(':')[0] | lower }}adm"
      register: chkcmd3
      with_items: "{{hostvars[inventory_hostname]['chkcmd1']['stdout'].split(',')}}"
      when: "'localhost' not in inventory_hostname"

    - name: Run Replication Status check command
      command: "sh /tmp/hana_repl_status.sh {{item}} {{inventory_hostname}}"
      ignore_errors: true
      become: yes
      become_user: "{{ item.split(':')[0] | lower }}adm"
      register: chkcmd4
      with_items: "{{hostvars[inventory_hostname]['chkcmd1']['stdout'].split(',')}}"
      when: "'localhost' not in inventory_hostname"

    - name: Run SR state command
      command: "sh /tmp/hana_sr_state.sh {{item}} {{inventory_hostname}}"
      ignore_errors: true
      become: yes
      become_user: "{{ item.split(':')[0] | lower }}adm"
      register: chkcmd5
      with_items: "{{hostvars[inventory_hostname]['chkcmd1']['stdout'].split(',')}}"
      when: "'localhost' not in inventory_hostname"

    - name: Push the check results to Splunk Nesetd
      become: no
      command: "python ./scripts/csv2json.py  '{{ item[1]['stdout']}}' 'bhp_oi_gl_sap' 'sap:ansible:monitor'"
      with_nested:
        - "{{ groups['all'] }}"
        - "{{ hostvars['USCOWQSDEQ12']['chkcmd2']['results'] }}"
      when: "'localhost' in inventory_hostname"


    - name: Push the backup results to Splunk Nesetd
      become: no
      command: "python ./scripts/csv2json.py  '{{ item[1]['stdout']}}' 'bhp_oi_gl_sap' 'sap:ansible:monitor'"
      with_nested:
        - "{{ groups['all'] }}"
        - "{{ hostvars['USCOWQSDEQ12']['chkcmd3']['results'] }}"
      when: "'localhost' in inventory_hostname"

    - name: Push the replication results to Splunk Nesetd
      become: no
      command: "python ./scripts/csv2json.py  '{{ item[1]['stdout']}}' 'bhp_oi_gl_sap' 'sap:ansible:monitor'"
      with_nested:
        - "{{ groups['all'] }}"
        - "{{ hostvars['USCOWQSDEQ12']['chkcmd4']['results'] }}"
      when: "'localhost' in inventory_hostname"

    - name: Push the SRState results to Splunk Nesetd
      become: no
      command: "python ./scripts/csv2json.py  '{{ item[1]['stdout']}}' 'bhp_oi_gl_sap' 'sap:ansible:monitor'"
      with_nested:
        - "{{ groups['all'] }}"
        - "{{ hostvars['USCOWQSDEQ12']['chkcmd5']['results'] }}"
      when: "'localhost' in inventory_hostname"

    - name: Push the check script errors to Splunk Nesetd
      become: no
      command: "python ./scripts/errors_csv2json.py  \"{{ item[0] }}\" \"{{ item[1]['cmd']}}\" \"{{ item[1]['stderr_lines'] | regex_replace('\\\"','')}}\" \"bhp_oi_gl_sap\" \"sap:ansible:errors\""
      with_nested:
        - "{{ groups['all'] }}"
        - "{{ hostvars['USCOWQSDEQ12']['chkcmd2']['results'] }}"
      when: "'localhost' in inventory_hostname"

    - name: Push the backup script errors to Splunk Nesetd
      become: no
      command: "python ./scripts/errors_csv2json.py  \"{{ item[0] }}\" \"{{ item[1]['cmd']}}\" \"{{ item[1]['stderr_lines'] | regex_replace('\\\"','')}}\" \"bhp_oi_gl_sap\" \"sap:ansible:errors\""
      with_nested:
        - "{{ groups['all'] }}"
        - "{{ hostvars['USCOWQSDEQ12']['chkcmd3']['results'] }}"
      when: "'localhost' in inventory_hostname"

    - name: Push the replication status errors to Splunk Nesetd
      become: no
      command: "python ./scripts/errors_csv2json.py  \"{{ item[0] }}\" \"{{ item[1]['cmd']}}\" \"{{ item[1]['stderr_lines'] | regex_replace('\\\"','')}}\" \"bhp_oi_gl_sap\" \"sap:ansible:errors\""
      with_nested:
        - "{{ groups['all'] }}"
        - "{{ hostvars['USCOWQSDEQ12']['chkcmd4']['results'] }}"
      when: "'localhost' in inventory_hostname"

    - name: Push the st state status errors to Splunk Nesetd
      become: no
      command: "python ./scripts/errors_csv2json.py  \"{{ item[0] }}\" \"{{ item[1]['cmd']}}\" \"{{ item[1]['stderr_lines'] | regex_replace('\\\"','')}}\" \"bhp_oi_gl_sap\" \"sap:ansible:errors\""
      with_nested:
        - "{{ groups['all'] }}"
        - "{{ hostvars['USCOWQSDEQ12']['chkcmd5']['results'] }}"
      when: "'localhost' in inventory_hostname"
